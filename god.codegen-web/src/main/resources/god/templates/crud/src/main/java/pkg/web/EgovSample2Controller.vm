##
#set($voPackage="${package}.service")
#set($voClassName="${entity.pcName}VO")
#set($voInstanceName="${entity.ccName}VO")
#set($servicePackage="${package}.service")
#set($serviceClassName="${entity.pcName}Service")
#set($serviceName="${entity.ccName}Service")
#set($serviceInstanceName="service")
#set($controllerPackage="${package}.web")
#set($controllerClassName="${entity.pcName}Controller")
##
##
#set($listInstanceName="${entity.ccName}List")
#set($insertMethodName="insert")
#set($updateMethodName="update")
#set($deleteMethodName="delete")
#set($selectMethodName="select")
#set($selectListMethodName="selectList")
#set($selectListTotCntMethodName="selectListCount")
##
##
#set($updateViewMethodName="updateView")
#set($addMethodName="add")
#set($addViewMethodName="addView")
##
#set($listPath="/${entity.ccName}/egov${entity.pcName}List.do")
#set($addViewPath="/${entity.ccName}/add${entity.pcName}View.do")
#set($addPath="/${entity.ccName}/add${entity.pcName}.do")
#set($selectPath="/${entity.ccName}/select${entity.pcName}.do")
#set($updatePath="/${entity.ccName}/update${entity.pcName}.do")
#set($updateViewPath="/${entity.ccName}/update${entity.pcName}View.do")
#set($deletePath="/${entity.ccName}/delete${entity.pcName}.do")
##
#set($listView="/${entity.ccName}/egov${entity.pcName}List")
#set($registerView="/${entity.ccName}/egov${entity.pcName}Register")
##
##
package ${controllerPackage};

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;

import egovframework.rte.fdl.property.EgovPropertyService;
import egovframework.rte.psl.dataaccess.util.EgovMap;
import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import ${servicePackage}.${serviceClassName};
import ${voPackage}.${voClassName};

/**
 * <pre>
 * &#64;Class Name : ${controllerClassName}.java
 * &#64;Description : ${entity.pcName} Controller class
 * &#64;Modification Information
 * &#64;
 * &#64;  수정일		 수정자				   수정내용
 * &#64; -------	--------	---------------------------
 * &#64; ${createDate}	${author}		  최초 생성
 *
 *  &#64;author 실행환경 개발팀 ${author}
 *  &#64;since ${createDate}
 *  &#64;version 1.0
 *  &#64;see
 *  
 *  Copyright (C) 2009 by MOSPA  All right reserved.
 * </pre>
 */

@Controller
public class ${controllerClassName} {

	@Autowired
	@Qualifier("${serviceName}")
	private ${serviceClassName} ${serviceInstanceName};

	@Autowired
	@Qualifier("propertiesService")
	private EgovPropertyService propertiesService;

	/**
	 * ${entity.name} 목록을 조회한다. (pageing)
	 * 
	 * @param searchVO - 조회할 정보가 담긴 SampleDefaultVO
	 * @return "${listView}"
	 */
	@RequestMapping(value = "${listPath}")
	public String ${selectListMethodName}(${voClassName} vo, Model model) {

		/** EgovPropertyService.sample */
		vo.setPageUnit(propertiesService.getInt("pageUnit"));
		vo.setPageSize(propertiesService.getInt("pageSize"));

		/** pageing */
		PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(vo.getPageIndex());
		paginationInfo.setRecordCountPerPage(vo.getPageUnit());
		paginationInfo.setPageSize(vo.getPageSize());

		vo.setFirstIndex(paginationInfo.getFirstRecordIndex());
		vo.setLastIndex(paginationInfo.getLastRecordIndex());
		vo.setRecordCountPerPage(paginationInfo.getRecordCountPerPage());

		List<EgovMap> ${listInstanceName} = ${serviceInstanceName}.${selectListMethodName}(vo);
		model.addAttribute("resultList", ${listInstanceName});

		int totCnt = ${serviceInstanceName}.${selectListTotCntMethodName}(vo);
		paginationInfo.setTotalRecordCount(totCnt);
		model.addAttribute("paginationInfo", paginationInfo);

		return "${listView}";
	}

	@RequestMapping("${addViewPath}")
	public String ${addViewMethodName}(${voClassName} vo, Model model) {
		model.addAttribute("${voInstanceName}", new ${voClassName}());
		return "${registerView}";
	}

	@RequestMapping("${addPath}")
	public String ${addMethodName}(${voClassName} vo, Model model) {
		${serviceInstanceName}.${insertMethodName}(vo);
		return "forward:${listPath}";
	}

	@RequestMapping("${updateViewPath}")
	public String ${updateViewMethodName}(${voClassName} vo, Model model) {
		model.addAttribute(${selectMethodName}(vo, model));
		return "${registerView}";
	}

	@RequestMapping("${selectPath}")
	public ${voClassName} ${selectMethodName}(${voClassName} vo, Model model) {
		return ${serviceInstanceName}.${selectMethodName}(vo);
	}

	@RequestMapping("${updatePath}")
	public String ${updateMethodName}(${voClassName} vo, Model model) {
		${serviceInstanceName}.${updateMethodName}(vo);
		return "forward:${listPath}";
	}

	@RequestMapping("${deletePath}")
	public String ${deleteMethodName}(${voClassName} vo, Model model) {
		${serviceInstanceName}.${deleteMethodName}(vo);
		return "forward:${listPath}";
	}

}
